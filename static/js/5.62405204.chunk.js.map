{"version":3,"sources":["components/Loader.js","components/post/PostActions.js","components/post/PostFooter.js","components/post/PostAddComment.js","components/post/PostComments.js","components/profile/UserContext.js","context/FollowContext.js","components/profile/ProfileHeader.js","components/profile/Photos.js","components/profile/Modal.js","components/profile/FollowerFollowingProfile.js","components/profile/FollowerFollowing.js","components/profile/ProfileIndex.js","pages/Profile.js"],"names":["Loader","class","PostActions","docId","totalLikes","likedPhoto","handleFocus","useContext","UserContext","user","uid","userId","useState","toggleLiked","setToggleLiked","likes","setLikes","FirebaseContext","firebase","FieldValue","handleToggleLiked","a","firestore","collection","doc","update","arrayRemove","arrayUnion","className","onClick","onKeyDown","e","key","xmlns","fill","viewBox","stroke","stroke-linecap","stroke-linejoin","stroke-width","d","strokeLinecap","strokeLinejoin","strokeWidth","PostFooter","caption","username","to","PostAddComment","comments","setComments","commentInput","comment","setComment","displayName","handleSubmitComment","event","preventDefault","length","method","onSubmit","aria-label","autocomplete","type","name","value","placeholder","onChange","target","ref","disabled","Comment","item","PostComments","allComments","posted","showAllComments","setShowAllComments","slice","map","formatDistance","Date","React","createContext","FollowContext","ProfileHeader","photosCount","followerCount","setFollowerCount","followingCount","UseUser","isFollowingProfile","setIsFollowingProfile","userr","dispatchFollowEvent","activeBtnFollow","history","useHistory","dispatchUserEvent","useEffect","isLoggedInUserFollowingProfile","isUserFollowingProfile","isFollowing","followers","following","handleToggleFollow","updateLoggedInUserFollowing","updateFollowedUserFollowers","getUSerByUserId","updatedUser","profile","alt","src","profilePicture","process","push","undefined","count","width","height","fullName","bio","Photos","photos","setSelectedImg","selectedImg","photo","imageSrc","fill-rule","clip-rule","Modal","useRef","classList","contains","userLikedPhoto","current","focus","dateCreated","FollowerFollowingProfile","profileDocId","suggestedUserPic","profileId","loggedInUserDocId","isFollow","setProfile","postSet","followed","setFollowed","followings","FollowerFollowing","profiles","setProfiles","getFollowers","response","getFollowings","followerList","followingList","includes","propTypes","PropTypes","shape","number","isRequired","emailAddress","string","array","UserProfile","useReducer","state","newState","photosCollection","dispatch","setFollowers","setFollowings","setPostSet","getUserPhotosByUserId","sort","b","getProfileInfoAndPhotos","Provider","actionType","payload","Profile","useParams","setUserr","getUserByUsername","returnedUser","document","title","ROUTES","checkUserExist","Header"],"mappings":"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","file":"static/js/5.62405204.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Loader = () => {\r\n    let circleCommonClasses = 'h-2.5 w-2.5 bg-current rounded-full';\r\n\r\n    return (\r\n        <div class=\"fixed top-0 left-0 right-0 bottom-0 w-full h-screen z-50 overflow-hidden bg-gray-700 opacity-75 flex flex-col items-center justify-center\">\r\n            <div class=\"loader ease-linear rounded-full border-4 border-t-4 border-gray-200 h-12 w-12 mb-4\"></div>\r\n            <h2 class=\"text-center text-white text-xl font-semibold\">Loading...</h2>\r\n            <p class=\"w-1/3 text-center text-white\">This may take a few seconds</p>\r\n        </div>\r\n    );\r\n};\r\nexport default Loader\r\n","import React, { useContext, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport UserContext from '../../context/User';\r\nimport FirebaseContext from '../../context/Firebase'\r\n\r\nfunction PostActions({ docId, totalLikes, likedPhoto, handleFocus }) {\r\n\r\n    const {\r\n        user: { uid: userId = '' }\r\n    } = useContext(UserContext);\r\n\r\n    const [toggleLiked, setToggleLiked] = useState(likedPhoto);\r\n    const [likes, setLikes] = useState(totalLikes);\r\n    const { firebase, FieldValue } = useContext(FirebaseContext);\r\n\r\n    const handleToggleLiked = async () => {\r\n\r\n        setToggleLiked(!toggleLiked);\r\n        await firebase.firestore().collection('photos').doc(docId).update({\r\n            likes: toggleLiked ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId)\r\n        })\r\n\r\n        setLikes((likes) => (toggleLiked ? likes - 1 : likes + 1))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex justify-between px-4 pt-2\">\r\n                <div className=\"flex\">\r\n                    <svg onClick={handleToggleLiked}\r\n                        onKeyDown={(e) => {\r\n                            if (e.key === 'Enter') {\r\n                                handleToggleLiked();\r\n                            }\r\n                        }}\r\n                        xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"\r\n                        className={`w-8 mr-4 select-none cursor-pointer ${toggleLiked ? 'fill-red text-red-600' : 'text-gray-800'}`}>\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\r\n                    </svg>\r\n                    <svg onClick={handleFocus}\r\n                        onKeyDown={(e) => {\r\n                            if (e.key === 'Enter') {\r\n                                handleFocus();\r\n                            }\r\n                        }}\r\n                        xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"\r\n                        className={`w-8 mr-4 select-none text-gray-800 cursor-pointer`}>\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z\" />\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n            <div className=\"px-4 py-0 my-0\">\r\n                <p className=\"font-semibold\">{likes === 1 ? `${likes} like` : `${likes} likes `}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nPostActions.propTypes = {\r\n    docId: PropTypes.string.isRequired,\r\n    totalLikes: PropTypes.number.isRequired,\r\n    likedPhoto: PropTypes.bool.isRequired,\r\n    handleFocus: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PostActions\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction PostFooter({ caption, username, }) {\r\n    return (\r\n        <div className=\"px-4 pt-0 pb-0\">\r\n            <Link to={`/profile/${username}`}>\r\n                <span className=\"mr-1 font-medium text-gray-800\">{username}:</span>\r\n            </Link>\r\n            <span className=\"text-xs text-gray-800\">{caption}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nPostFooter.propTypes = {\r\n    caption: PropTypes.string.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default PostFooter\r\n","import React, { useContext, useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport FirebaseContext from '../../context/Firebase';\r\nimport UserContext from '../../context/User';\r\n\r\n\r\nfunction PostAddComment({ docId, comments, setComments, commentInput }) {\r\n\r\n    const [comment, setComment] = useState('');\r\n    const { firebase, FieldValue } = useContext(FirebaseContext);\r\n    const { user: { displayName } } = useContext(UserContext);\r\n\r\n    const handleSubmitComment = (event) => {\r\n        event.preventDefault();\r\n        if (comment.length > 0) {\r\n            setComments([{ displayName, comment }, ...comments]);\r\n            setComment('');\r\n\r\n            return firebase.firestore().collection('photos').doc(docId).update({\r\n                comments: FieldValue.arrayUnion({ displayName, comment })\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"border-t border-gray-500\">\r\n            <form\r\n                method=\"POST\"\r\n                onSubmit={handleSubmitComment}\r\n                className=\"flex justify-between px-0\">\r\n                <input aria-label=\"Add a Comment\" autocomplete=\"off\" type=\"text\" name=\"add-comment\"\r\n                    value={comment}\r\n                    placeholder=\"Add a comment...\"\r\n                    onChange={({ target }) => setComment(target.value)}\r\n                    ref={commentInput}\r\n                    className=\"text-sm text-gray-800 w-full mr-1 py-2 px-4\" />\r\n                <button className={`px-2 cursor-pointer  text-blue-500 ${!comment && 'opacity-25'} `}\r\n                    type=\"button\"\r\n                    disabled={comment.length < 1}\r\n                    onClick={handleSubmitComment}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 rotate-90\" viewBox=\"0 0 20 20\" fill=\"blue\"\r\n                        className=\"w-6 transform rotate-90\">\r\n                        <path d=\"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z\" />\r\n                    </svg>\r\n                </button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nPostAddComment.propTypes = {\r\n    docId: PropTypes.string.isRequired,\r\n    comments: PropTypes.array.isRequired,\r\n    setComment: PropTypes.func.isRequired,\r\n    commentInput: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default PostAddComment\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { formatDistance } from 'date-fns';\r\nimport { Link } from 'react-router-dom';\r\nimport PostAddComment from './PostAddComment';\r\n\r\n\r\nfunction PostComments({ docId, comments: allComments, posted, commentInput }) {\r\n\r\n    const [comments, setComments] = useState(allComments);\r\n    const [showAllComments, setShowAllComments] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"px-4 py-2\">\r\n                {comments.length >= 3 && (\r\n                    <p className=\"text-sm text-gray-800 mb-0 cursor-pointer\" onClick={() => setShowAllComments(!showAllComments)}>\r\n                        {showAllComments ? (`show less comments`) : (`View all ${comments.length} comments`)}\r\n                    </p>\r\n                )}\r\n                {showAllComments ? (\r\n                    comments.slice(0, 10).map((item) =>\r\n                        <Comment key={`${item.comment}-${item.displayName}`} item={item} />\r\n                    )) : (comments.slice(0, 2).map((item) =>\r\n                        <Comment key={`${item.comment}-${item.displayName}`} item={item} />\r\n                    ))}\r\n                <p className=\"text-gray-800 text-xs mt-1\">{formatDistance(posted, new Date())} ago</p>\r\n            </div>\r\n            <PostAddComment className=\"bottom-0\"\r\n                docId={docId}\r\n                comments={comments}\r\n                setComments={setComments}\r\n                commentInput={commentInput}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Comment({ item }) {\r\n    return (\r\n        <p className=\"mb-0\" >\r\n            <Link to={`/profile/${item.displayName}`}>\r\n                <span className=\"mr-1 font-medium text-gray-800\">\r\n                    {item.displayName}:\r\n                            </span>\r\n            </Link>\r\n            <span className=\"text-xs\">{item.comment}</span>\r\n        </p>\r\n    )\r\n}\r\n\r\nPostComments.propTypes = {\r\n    doc: PropTypes.string.isRequired,\r\n    comments: PropTypes.array.isRequired,\r\n    posted: PropTypes.number.isRequired,\r\n    commentInput: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default PostComments\r\n","import React from \"react\";\r\n\r\nconst UserContext = React.createContext({});\r\n\r\nexport default UserContext;","import React from \"react\";\r\n\r\nconst FollowContext = React.createContext({});\r\n\r\nexport default FollowContext;","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport UseUser from '../../hooks/UseUser';\r\nimport { getUSerByUserId, isUserFollowingProfile, updateFollowedUserFollowers, updateLoggedInUserFollowing } from '../../services/Firbase';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport * as ROUTES from '../../constants/Routes'\r\nimport UserContext from './UserContext'\r\nimport FollowContext from '../../context/FollowContext';\r\n\r\n\r\nfunction ProfileHeader({ photosCount, followerCount, followingCount, setFollowerCount }) {\r\n\r\n    const { user } = UseUser();\r\n    const [isFollowingProfile, setIsFollowingProfile] = useState(false);\r\n\r\n    const { userr, dispatchFollowEvent } = useContext(FollowContext);\r\n\r\n    const activeBtnFollow = user.username && user.username !== userr.username;\r\n    const history = useHistory();\r\n\r\n    const { dispatchUserEvent } = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        const isLoggedInUserFollowingProfile = async () => {\r\n            const isFollowing = await isUserFollowingProfile(user.username, userr.userId);\r\n            setIsFollowingProfile(isFollowing);\r\n        }\r\n\r\n        if (user.username && userr.userId) {\r\n            isLoggedInUserFollowingProfile();\r\n        }\r\n    }, [user.username, userr.followers, userr.following, userr.userId]);\r\n\r\n    const handleToggleFollow = async () => {\r\n        setIsFollowingProfile(!isFollowingProfile);\r\n        await updateLoggedInUserFollowing(user.docId, userr.userId, isFollowingProfile);\r\n        await updateFollowedUserFollowers(userr.docId, user.userId, isFollowingProfile);\r\n        let updatedUser = await getUSerByUserId(userr.userId)\r\n        dispatchFollowEvent('UPDATE_FOLLOWER', updatedUser[0])\r\n        setFollowerCount({\r\n            followerCount: isFollowingProfile ? followerCount - 1 : followerCount + 1,\r\n            profile: updatedUser\r\n        })\r\n        // dispatchFollowEvent('UPDATE_FOLLOWER', updatedUser);\r\n\r\n    }\r\n\r\n    const handleEditProfile = () => {\r\n        history.push(`/profile/edit/${user.username}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"md:grid md:grid-cols-3 md:gap-4 justify-between mx-4 md:mx-auto max-w-screen-lg mb-8 mt-16\">\r\n            <div className=\"container relative md:flex justify-center\">\r\n                {\r\n                    (userr.username) && (\r\n                        <img className=\"rounded-full h-40 w-40 z-0\"\r\n                            alt={`${userr.username} profile pic`}\r\n                            src={userr.profilePicture ? userr.profilePicture : process.env.PUBLIC_URL + \"/images/avatars/dali.jpg\"} />\r\n                    )}\r\n            </div>\r\n            <div className=\"flex items-center justify-center  flex-col col-span-2\">\r\n                <div className=\"container flex items-center mt-4\">\r\n                    <p className=\"text-2xl mr-4\">{userr.username}</p>\r\n                    {activeBtnFollow ? (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"bg-blue-600 font-bold text-sm rounded text-white w-20 h-8\"\r\n                            onClick={handleToggleFollow}>\r\n                            {isFollowingProfile ? 'Unfollow' : 'Follow'}\r\n                        </button>\r\n                    ) :\r\n                        (<button\r\n                            type=\"button\"\r\n                            className=\"bg-gray-200 font-bold text-sm rounded text-gray-700 w-20 h-8\"\r\n                            onClick={handleEditProfile}>\r\n                            Edit Profile\r\n                        </button>)}\r\n                </div>\r\n                <div className=\"container flex mt-4\">\r\n                    {userr.followers === undefined || userr.following === undefined ? (\r\n                        <Skeleton count={1} width={677} height={24} />\r\n                    ) : (\r\n                        <>\r\n                            <p className=\"mr-10\">\r\n                                <span className=\"font-bold\">{photosCount}</span>\r\n                                {`  ${photosCount === 1 ? 'post' : 'posts'}`}\r\n                            </p>\r\n                            <p className=\"mr-10 cursor-pointer\" onClick={() => { dispatchUserEvent('SHOW_FOLLOWERS', userr.followers) }}>\r\n                                <span className=\"font-bold\">{userr.followers.length}</span>\r\n                                {`  ${userr.followers.length === 1 ? 'follower' : 'followers'}`}\r\n                            </p>\r\n                            <p className=\"mr-10 cursor-pointer\" onClick={() => { dispatchUserEvent('SHOW_FOLLOWING', userr.following) }}>\r\n                                <span className=\"font-bold\">{userr.following.length}</span>\r\n                                {`  following`}\r\n                            </p>\r\n                        </>\r\n                    )\r\n                    }\r\n                </div>\r\n                <div className=\"container mt-4\">\r\n                    <p className=\"font-medium text-gray-700\">\r\n                        {!userr.fullName ? <Skeleton count={1} height={24} /> : userr.fullName}\r\n                    </p>\r\n                </div>\r\n                <div className=\"container mt-1\">\r\n                    <p className=\"text-gray-700\">\r\n                        {userr.bio}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileHeader.propTypes = {\r\n    photosCount: PropTypes.number.isRequired,\r\n    followers: PropTypes.number.isRequired,\r\n    setFollowerCount: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ProfileHeader\r\n","import React, { useContext, useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport UserContext from './UserContext';\r\nimport Loader from '../Loader';\r\n\r\nfunction Photos({ photos, setSelectedImg }) {\r\n\r\n    const { selectedImg, dispatchUserEvent } = useContext(UserContext);\r\n\r\n    return (\r\n        <div className=\" border-t border-gray-300 mt-8 pt-4\">\r\n            <div className=\"grid grid-cols-3 gap-4 mt-4 mb-12 mx-4\">\r\n                {!photos ? (\r\n                    <>\r\n                        <Loader />\r\n                        {/* <Skeleton count={12} width={320} height={400} /> */}\r\n                    </>\r\n                ) : (\r\n                    photos.length > 0 ? (\r\n                        photos.map((photo) => (\r\n                            <div key={photo.docId} className=\"relative group  h-28 sm:h-48 md:h-64\" onClick={() => dispatchUserEvent('SHOW_PHOTO', photo)}>\r\n                                <img src={photo.imageSrc}\r\n                                    alt={photo.caption} className=\"object-cover w-full h-full\" />\r\n                                <div className=\"absolute bottom-0 left-0 w-full h-full \r\n                                    justify-evenly items-center bg-gray-500 bg-opacity-50 \r\n                                    group-hover:flex hidden\">\r\n                                    <p className=\"flex justify-between items-center text-white font-bold\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"\r\n                                            className=\"w-8 mr-2\">\r\n                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\r\n                                        </svg>\r\n                                        {photo.likes.length}\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 mr-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                                            className=\"w-8 h-8 ml-8 mr-2\">\r\n                                            <path fill-rule=\"evenodd\" d=\"M18 5v8a2 2 0 01-2 2h-5l-5 4v-4H4a2 2 0 01-2-2V5a2 2 0 012-2h12a2 2 0 012 2zM7 8H5v2h2V8zm2 0h2v2H9V8zm6 0h-2v2h2V8z\" clip-rule=\"evenodd\" />\r\n                                        </svg>\r\n                                        {photo.comments.length}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    ) : null\r\n                )\r\n                }\r\n            </div >\r\n            {photos && (photos.length === 0 && <p className=\"text-center text-2xl\">\r\n                No Posts Yet\r\n            </p>)}\r\n        </div >\r\n    )\r\n}\r\n\r\nPhotos.propTypes = {\r\n    photos: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Photos\r\n","import React, { useContext, useEffect, useRef } from 'react'\r\nimport PostActions from '../post/PostActions';\r\nimport PostComments from '../post/PostComments';\r\nimport PostFooter from '../post/PostFooter';\r\nimport UserContext from './UserContext';\r\n\r\nconst Modal = () => {\r\n\r\n    const commentInput = useRef(null);\r\n    const handleFocus = () => commentInput.current.focus();\r\n\r\n    const { selectedImg, dispatchUserEvent } = useContext(UserContext);\r\n\r\n\r\n    const handleClick = (e) => {\r\n        if (e.target.classList.contains(\"backdrop-filter\")) {\r\n            dispatchUserEvent('HIDE_PHOTO', {});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"fixed flex w-full h-full mx-auto pb-8 md:pb-0 md:mx-0 md:w-full m:h-full scrollbar-hide justify-center items-center inset-0 start-0 top-16 md:top-0 backdrop-filter backdrop-blur-sm\"\r\n            onClick={handleClick}>\r\n            <div className=\" pb-16 md:pb-0 overflow-y-auto md:fixed md:flex  inset-y-2 justify-center max-h-full md:h-10/12 lg:h-8/12 max-w-full md:w-10/12 lg:w-8/12 md:mx-auto  my-16 bg-gray-200 shadow-2xl rounded-md\">\r\n                < img src={selectedImg.imageSrc} alt=\"enlarged image\"\r\n                    className=\" object-scale-600 rounded-md flex-shrink-0\" />\r\n                <div className=\"pl-3 w-full overflow-y-auto\">\r\n                    <PostActions\r\n                        docId={selectedImg.docId}\r\n                        totalLikes={selectedImg.likes.length}\r\n                        likedPhoto={selectedImg.userLikedPhoto}\r\n                        handleFocus={handleFocus}\r\n                    />\r\n                    <PostFooter caption={selectedImg.caption} username={selectedImg.name} />\r\n                    <PostComments\r\n                        docId={selectedImg.docId}\r\n                        comments={selectedImg.comments}\r\n                        posted={selectedImg.dateCreated}\r\n                        commentInput={commentInput} />\r\n                </div>\r\n                <div className=\"absolute right-0 top-0 bg-gray-100 rounded-bl-lg\" onClick={() => dispatchUserEvent('HIDE_PHOTO', {})}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-9 w-8\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                    </svg>\r\n                </div>\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useContext, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport FollowContext from '../../context/FollowContext';\r\nimport UseUser from '../../hooks/UseUser';\r\nimport { getUSerByUserId, updateFollowedUserFollowers, updateLoggedInUserFollowing } from '../../services/Firbase';\r\nimport UserContext from './UserContext';\r\n\r\nfunction FollowerFollowingProfile({ profileDocId, username, suggestedUserPic, profileId, userId, loggedInUserDocId, isFollow, setProfile, postSet }) {\r\n    const [followed, setFollowed] = useState(isFollow);\r\n    const { followers, followings, dispatchUserEvent } = useContext(UserContext);\r\n\r\n    const { user } = UseUser();\r\n\r\n    const { userr, dispatchFollowEvent } = useContext(FollowContext);\r\n\r\n\r\n    async function handleFollowUser() {\r\n        setFollowed(!followed)\r\n        await updateLoggedInUserFollowing(loggedInUserDocId, profileId, followed);\r\n        await updateFollowedUserFollowers(profileDocId, userId, followed);\r\n        let updatedUser = await getUSerByUserId(userId)\r\n        setProfile({\r\n            profile: updatedUser[0]\r\n        })\r\n\r\n        dispatchFollowEvent('UPDATE_FOLLOWER', updatedUser[0])\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        postSet(null)\r\n        dispatchUserEvent('HIDE_FOLLOWING', {});\r\n        dispatchUserEvent('HIDE_FOLLOWERS', {});\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\" h-full flex  items-center  align-items justify-between z-20 border-black\">\r\n            <div className=\" justify-between mr-3 flex\" onClick={handleClick}>\r\n                <Link to={`/profile/${username}`} className=\" mr-3 flex items-center align-center\" >\r\n                    <img\r\n                        className=\"rounded-full w-10 h-10 mr-3 \"\r\n                        src={suggestedUserPic ? suggestedUserPic : process.env.PUBLIC_URL + \"/images/avatars/dali.jpg\"}\r\n                        alt=\"user profile pic\"\r\n                    />\r\n\r\n                    <p className=\"font-bold  text-sm flex\">{username}</p>\r\n                </Link>\r\n            </div>\r\n            <div>\r\n                <button\r\n                    className=\"text-xs font-bold text-blue-500\"\r\n                    type=\"button\"\r\n                    onClick={handleFollowUser}\r\n                >{profileDocId !== user.docId ? (followed ? 'Unfollow' : 'Follow') : null}\r\n                </button>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default FollowerFollowingProfile\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport FollowContext from '../../context/FollowContext';\r\nimport { getFollowers, getFollowings } from '../../services/Firbase';\r\nimport Loader from '../Loader';\r\nimport FollowerFollowingProfile from './FollowerFollowingProfile';\r\nimport UserContext from './UserContext'\r\n\r\nfunction FollowerFollowing({ isFollow, setProfile, postSet }) {\r\n\r\n    const [profiles, setProfiles] = useState(null);\r\n    const { followers, followings, dispatchUserEvent } = useContext(UserContext);\r\n\r\n    const { userr } = useContext(FollowContext);\r\n\r\n\r\n    useEffect(() => {\r\n        async function followerList() {\r\n\r\n            const response = await getFollowers(userr.userId, followers);\r\n            setProfiles(response);\r\n        }\r\n\r\n        async function followingList() {\r\n\r\n            const response = await getFollowings(userr.userId, followings);\r\n\r\n            setProfiles(response);\r\n\r\n        }\r\n\r\n\r\n        if (isFollow) {\r\n            followerList();\r\n        } else {\r\n            followingList();\r\n        }\r\n    }, [followers, followings, userr.followers]);\r\n\r\n\r\n    const handleClick = (e) => {\r\n        if (e.target.classList.contains(\"backdrop-filter\")) {\r\n            followers && dispatchUserEvent('HIDE_FOLLOWERS', {});\r\n            followings && dispatchUserEvent('HIDE_FOLLOWING', {});\r\n\r\n        }\r\n    }\r\n\r\n    return !profiles ? (\r\n        <Loader />\r\n    ) :\r\n\r\n        profiles.length > 0 ? (\r\n            <div className=\"fixed flex w-full h-full justify-center items-center inset-0 start-0 top-0 backdrop-filter backdrop-blur-lg\"\r\n                onClick={handleClick}>\r\n                <div className=\"w-10/12 sm:w-2/5 md:w-3/12 rounded-md flex flex-col bg-gray-100 \">\r\n                    <div className=\" text-sm text-center grid-3 relative justify-end my-2 \">\r\n                        <p className=\"font-bold text-gray-600 object-center\">{isFollow ? 'Followers' : 'Following'}</p>\r\n                        <div className=\"absolute right-0 top-0 \" onClick={() => (dispatchUserEvent('HIDE_FOLLOWERS', {}), dispatchUserEvent('HIDE_FOLLOWING', {}))}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex flex-col gap-4 m-4\">\r\n                        {profiles.map((profile) => (\r\n                            <FollowerFollowingProfile\r\n                                key={profile.docId}\r\n                                profileDocId={profile.docId}\r\n                                username={profile.username}\r\n                                suggestedUserPic={profile.profilePicture}\r\n                                profileId={profile.userId}\r\n                                userId={userr.userId}\r\n                                loggedInUserDocId={userr.docId}\r\n                                isFollow={userr.following.includes(profile.userId)}\r\n                                setProfile={setProfile}\r\n                                postSet={postSet}\r\n\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ) : null\r\n}\r\n\r\nexport default FollowerFollowing\r\n","import React, { useReducer, useEffect, useState, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProfileHeader from './ProfileHeader';\r\nimport Photos from './Photos';\r\nimport { getUserByUsername, getUserPhotosByUserId } from '../../services/Firbase';\r\nimport Modal from './Modal';\r\nimport FollowerFollowing from './FollowerFollowing';\r\nimport UserContext from \"./UserContext.js\";\r\nimport FollowContext from \"../../context/FollowContext\";\r\nimport Loader from '../Loader';\r\n\r\n\r\nfunction UserProfile() {\r\n\r\n    const reducer = (state, newState) => ({ ...state, ...newState });\r\n    const initialState = {\r\n        profile: {},\r\n        photosCollection: [],\r\n        followerCount: 0\r\n    }\r\n\r\n\r\n    const { userr } = useContext(FollowContext);\r\n\r\n    const [{ profile, photosCollection, followerCount, followingCount }, dispatch] = useReducer(reducer, initialState);\r\n    const [selectedImg, setSelectedImg] = useState(null);\r\n    const [followers, setFollowers] = useState(null);\r\n    const [followings, setFollowings] = useState(null);\r\n    const [postSet, setPostSet] = useState(null);\r\n\r\n    const dispatchUserEvent = (actionType, payload) => {\r\n        switch (actionType) {\r\n            case 'SHOW_FOLLOWERS':\r\n                setFollowers(payload);\r\n                return;\r\n            case 'HIDE_FOLLOWERS':\r\n                setFollowers(null);\r\n                return;\r\n            case 'SHOW_FOLLOWING':\r\n                setFollowings(payload);\r\n                return;\r\n            case 'HIDE_FOLLOWING':\r\n                setFollowings(null);\r\n                return;\r\n            case 'SHOW_PHOTO':\r\n                setSelectedImg(payload);\r\n                return;\r\n            case 'HIDE_PHOTO':\r\n                setSelectedImg(null);\r\n                return;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        async function getProfileInfoAndPhotos() {\r\n\r\n            const photos = await getUserPhotosByUserId(userr.userId);\r\n            setPostSet(photos);\r\n            photos.sort((a, b) => b.dateCreated - a.dateCreated);\r\n\r\n            dispatch({ profile: userr, photosCollection: postSet, followerCount: userr.followers.length, followingCount: userr.following.length });\r\n\r\n\r\n        }\r\n\r\n        getProfileInfoAndPhotos();\r\n\r\n    }, [userr, followers, followings]);\r\n\r\n    return (\r\n        postSet ? (\r\n            <UserContext.Provider value={{ followers, followings, selectedImg, dispatchUserEvent }}>\r\n\r\n\r\n                <ProfileHeader\r\n                    photosCount={photosCollection ? photosCollection.length : 0}\r\n                    followerCount={followerCount}\r\n                    followingCount={followingCount}\r\n                    setFollowerCount={dispatch}\r\n                />\r\n\r\n                { <Photos photos={postSet} />}\r\n                {selectedImg && <Modal />}\r\n                {followers &&\r\n                    <FollowerFollowing\r\n                        isFollow={true}\r\n                        setProfile={dispatch}\r\n                        postSet={setPostSet}\r\n                    />\r\n                }\r\n                {followings &&\r\n                    <FollowerFollowing\r\n                        isFollow={false}\r\n                        setProfile={dispatch}\r\n                        postSet={setPostSet}\r\n\r\n                    />\r\n                }\r\n            </UserContext.Provider>\r\n        ) : <Loader />\r\n    )\r\n}\r\n\r\nProfileHeader.propTypes = {\r\n    user: PropTypes.shape({\r\n        dateCreated: PropTypes.number.isRequired,\r\n        emailAddress: PropTypes.string.isRequired,\r\n        followers: PropTypes.array.isRequired,\r\n        following: PropTypes.array.isRequired,\r\n        fullName: PropTypes.string.isRequired,\r\n        username: PropTypes.string.isRequired,\r\n        userId: PropTypes.string.isRequired,\r\n    }).isRequired\r\n}\r\n\r\nexport default UserProfile\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { getUserByUsername } from '../services/Firbase';\r\nimport * as ROUTES from '../constants/Routes';\r\nimport Header from '../components/Header';\r\nimport UserProfile from '../components/profile/ProfileIndex';\r\nimport UserContext from '../components/profile/UserContext';\r\nimport FollowContext from '../context/FollowContext';\r\n\r\nfunction Profile() {\r\n\r\n    const { username } = useParams();\r\n    const [userr, setUserr] = useState(null);\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        async function checkUserExist() {\r\n            const returnedUser = await getUserByUsername(username);\r\n\r\n            if (returnedUser.length > 0) {\r\n                setUserr(returnedUser[0]);\r\n                document.title = `${returnedUser[0].fullName} (@${username})`;\r\n            } else {\r\n                history.push(ROUTES.NOT_FOUND)\r\n            }\r\n        }\r\n        checkUserExist();\r\n    }, [username, history])\r\n\r\n    const dispatchFollowEvent = (actionType, payload) => {\r\n        switch (actionType) {\r\n            case 'UPDATE_FOLLOWER':\r\n                setUserr(payload);\r\n                return;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n\r\n    return userr?.username ? (\r\n        <>\r\n            <Header />\r\n            <FollowContext.Provider value={{ userr: userr, dispatchFollowEvent: dispatchFollowEvent }}>\r\n                <div className=\" mx-auto max-w-screen-lg\">\r\n                    <div className=\"mx-auto mx-w-screen-lg\">\r\n                        <UserProfile />\r\n                    </div>\r\n                </div>\r\n            </FollowContext.Provider>\r\n        </>\r\n    ) : null;\r\n}\r\n\r\nexport default Profile\r\n"],"sourceRoot":""}