{"version":3,"sources":["components/profile/ProfileHeader.js","components/profile/Photos.js","components/profile/ProfileIndex.js","pages/Profile.js"],"names":["ProfileHeader","photosCount","profile","followerCount","setFollowerCount","user","UseUser","useState","isFollowingProfile","setIsFollowingProfile","activeBtnFollow","username","history","useHistory","useEffect","isLoggedInUserFollowingProfile","a","isUserFollowingProfile","userId","isFollowing","followers","following","handleToggleFollow","updateLoggedInUserFollowing","docId","updateFollowedUserFollowers","className","alt","src","profilePicture","type","onClick","push","undefined","count","width","height","length","fullName","bio","Photos","photos","map","photo","imageSrc","caption","xmlns","class","fill","viewBox","stroke","stroke-linecap","stroke-linejoin","stroke-width","d","likes","fill-rule","clip-rule","comments","propTypes","PropTypes","shape","dateCreated","number","isRequired","emailAddress","string","array","UserProfile","useReducer","state","newState","photosCollection","dispatch","getUserPhotosByUserId","getProfileInfoAndPhotos","Profile","useParams","setUser","getUserByUsername","returnedUser","document","title","ROUTES","checkUserExist","Header"],"mappings":"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","file":"static/js/8.fff220e5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport UseUser from '../../hooks/UseUser';\r\nimport { isUserFollowingProfile, updateFollowedUserFollowers, updateLoggedInUserFollowing } from '../../services/Firbase';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport * as ROUTES from '../../constants/Routes'\r\n\r\nfunction ProfileHeader({ photosCount, profile, followerCount, setFollowerCount }) {\r\n\r\n    const { user } = UseUser();\r\n    const [isFollowingProfile, setIsFollowingProfile] = useState(false);\r\n    const activeBtnFollow = user.username && user.username !== profile.username;\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const isLoggedInUserFollowingProfile = async () => {\r\n            const isFollowing = await isUserFollowingProfile(user.username, profile.userId);\r\n            setIsFollowingProfile(isFollowing);\r\n        }\r\n\r\n        if (user.username && profile.userId) {\r\n            isLoggedInUserFollowingProfile();\r\n        }\r\n    }, [user.username, profile.userId, profile.followers, profile.following]);\r\n\r\n    const handleToggleFollow = async () => {\r\n        setIsFollowingProfile(!isFollowingProfile);\r\n        await updateLoggedInUserFollowing(user.docId, profile.userId, isFollowingProfile);\r\n        await updateFollowedUserFollowers(profile.docId, user.userId, isFollowingProfile);\r\n        setFollowerCount({\r\n            followerCount: isFollowingProfile ? followerCount - 1 : followerCount + 1\r\n        })\r\n\r\n    }\r\n\r\n    const handleEditProfile = () => {\r\n        history.push(`/profile/edit/${user.username}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-3 gap-4 justify-between mx-auto max-w-screen-lg mb-16 mt-16\">\r\n            <div className=\"container flex justify-center\">\r\n                {\r\n                    (profile.username) && (\r\n                        <img className=\"rounded-full h-40 w-40 flex\"\r\n                            alt={`${profile.username} profile pic`}\r\n                            src={profile.profilePicture ? profile.profilePicture : \"/images/avatars/dali.jpg\"} />\r\n                    )}\r\n            </div>\r\n            <div className=\"flex items-center justify-center  flex-col col-span-2\">\r\n                <div className=\"container flex items-center \">\r\n                    <p className=\"text-2xl mr-4\">{profile.username}</p>\r\n                    {activeBtnFollow ? (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"bg-blue-600 font-bold text-sm rounded text-white w-20 h-8\"\r\n                            onClick={handleToggleFollow}>\r\n                            {isFollowingProfile ? 'Unfollow' : 'Follow'}\r\n                        </button>\r\n                    ) :\r\n                        (<button\r\n                            type=\"button\"\r\n                            className=\"bg-gray-50 font-bold text-sm rounded text-gray-700 w-20 h-8\"\r\n                            onClick={handleEditProfile}>\r\n                            Edit Profile\r\n                        </button>)}\r\n                </div>\r\n                <div className=\"container flex mt-4\">\r\n                    {profile.followers === undefined || profile.following === undefined ? (\r\n                        <Skeleton count={1} width={677} height={24} />\r\n                    ) : (\r\n                        <>\r\n                            <p className=\"mr-10\">\r\n                                <span className=\"font-bold\">{photosCount}</span>\r\n                                {`  ${photosCount === 1 ? 'post' : 'posts'}`}\r\n                            </p>\r\n                            <p className=\"mr-10\">\r\n                                <span className=\"font-bold\">{followerCount}</span>\r\n                                {`  ${followerCount === 1 ? 'follower' : 'followers'}`}\r\n                            </p>\r\n                            <p className=\"mr-10\">\r\n                                <span className=\"font-bold\">{profile.following.length}</span>\r\n                                {`  following`}\r\n                            </p>\r\n                        </>\r\n                    )\r\n                    }\r\n                </div>\r\n                <div className=\"container mt-4\">\r\n                    <p className=\"font-medium text-gray-700\">\r\n                        {!profile.fullName ? <Skeleton count={1} height={24} /> : profile.fullName}\r\n                    </p>\r\n                </div>\r\n                <div className=\"container mt-1\">\r\n                    <p className=\"text-gray-700\">\r\n                        {!profile.bio ? <Skeleton count={1} height={48} /> : profile.bio}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileHeader.propTypes = {\r\n    photosCount: PropTypes.number.isRequired,\r\n    followers: PropTypes.number.isRequired,\r\n    setFollowerCount: PropTypes.func.isRequired,\r\n    profile: PropTypes.shape({\r\n        docId: PropTypes.string.isRequired,\r\n        userId: PropTypes.string.isRequired,\r\n        username: PropTypes.string.isRequired,\r\n        fullname: PropTypes.string.isRequired,\r\n        following: PropTypes.array.isRequired,\r\n        followers: PropTypes.array.isRequired,\r\n    }).isRequired,\r\n}\r\n\r\nexport default ProfileHeader\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\nfunction Photos({ photos }) {\r\n    return (\r\n        <div className=\"h-16 border-t border-gray-300 mt-12 pt-4\">\r\n            <div className=\"grid grid-cols-3 gap-8 mt-4 mb-12\">\r\n                {!photos ? (\r\n                    <>\r\n                        <Skeleton count={12} width={320} height={400} />\r\n                    </>\r\n                ) : (\r\n                    photos.length > 0 ? (\r\n                        photos.map((photo) => (\r\n                            <div key={photo.docId} className=\"relative group h-64  \">\r\n                                <img src={photo.imageSrc}\r\n                                    alt={photo.caption} className=\"object-cover w-full h-full\" />\r\n                                <div className=\"absolute bottom-0 left-0 w-full h-full \r\n                                    justify-evenly items-center bg-gray-500 bg-opacity-50 \r\n                                    group-hover:flex hidden\">\r\n                                    <p className=\"flex justify-between items-center text-white font-bold\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"\r\n                                            className=\"w-8 mr-2\">\r\n                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\r\n                                        </svg>\r\n                                        {photo.likes.length}\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 mr-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                                            className=\"w-8 h-8 ml-8 mr-2\">\r\n                                            <path fill-rule=\"evenodd\" d=\"M18 5v8a2 2 0 01-2 2h-5l-5 4v-4H4a2 2 0 01-2-2V5a2 2 0 012-2h12a2 2 0 012 2zM7 8H5v2h2V8zm2 0h2v2H9V8zm6 0h-2v2h2V8z\" clip-rule=\"evenodd\" />\r\n                                        </svg>\r\n                                        {photo.comments.length}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    ) : null\r\n                )\r\n                }\r\n            </div >\r\n            {!photos || (photos.length === 0 && <p className=\"text-center text-2xl\">\r\n                No Posts Yet\r\n            </p>)}\r\n        </div >\r\n    )\r\n}\r\n\r\nPhotos.propTypes = {\r\n    photos: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Photos\r\n","import React, { useReducer, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProfileHeader from './ProfileHeader';\r\nimport Photos from './Photos';\r\nimport { getUserByUsername, getUserPhotosByUserId } from '../../services/Firbase';\r\n\r\nfunction UserProfile({ user }) {\r\n\r\n    const reducer = (state, newState) => ({ ...state, ...newState });\r\n    const initialState = {\r\n        profile: {},\r\n        photosCollection: [],\r\n        followerCount: 0\r\n    }\r\n\r\n    const [{ profile, photosCollection, followerCount }, dispatch] = useReducer(reducer, initialState);\r\n\r\n    useEffect(() => {\r\n        async function getProfileInfoAndPhotos() {\r\n            const photos = await getUserPhotosByUserId(user.userId);\r\n\r\n            dispatch({ profile: user, photosCollection: photos, followerCount: user.followers.length });\r\n\r\n\r\n        }\r\n\r\n        getProfileInfoAndPhotos();\r\n\r\n    }, [user]);\r\n\r\n    return <>\r\n        <ProfileHeader\r\n            photosCount={photosCollection ? photosCollection.length : 0}\r\n            profile={profile}\r\n            followerCount={followerCount}\r\n            setFollowerCount={dispatch}\r\n        />\r\n        <Photos photos={photosCollection} />\r\n    </>\r\n}\r\n\r\nProfileHeader.propTypes = {\r\n    user: PropTypes.shape({\r\n        dateCreated: PropTypes.number.isRequired,\r\n        emailAddress: PropTypes.string.isRequired,\r\n        followers: PropTypes.array.isRequired,\r\n        following: PropTypes.array.isRequired,\r\n        fullName: PropTypes.string.isRequired,\r\n        username: PropTypes.string.isRequired,\r\n        userId: PropTypes.string.isRequired,\r\n    }).isRequired\r\n}\r\n\r\nexport default UserProfile\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { getUserByUsername } from '../services/Firbase';\r\nimport * as ROUTES from '../constants/Routes';\r\nimport Header from '../components/Header';\r\nimport UserProfile from '../components/profile/ProfileIndex';\r\n\r\nfunction Profile() {\r\n\r\n    const { username } = useParams();\r\n    const [user, setUser] = useState(null);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n\r\n        async function checkUserExist() {\r\n            const returnedUser = await getUserByUsername(username);\r\n\r\n            if (returnedUser.length > 0) {\r\n                setUser(returnedUser[0]);\r\n                document.title = `${returnedUser[0].fullName} (@${username})`;\r\n            } else {\r\n                history.push(ROUTES.NOT_FOUND)\r\n            }\r\n        }\r\n        checkUserExist();\r\n    }, [username, history])\r\n\r\n    return user?.username ? (\r\n        <>\r\n            <Header />\r\n            <div className=\" mx-auto max-w-screen-lg\">\r\n                <div className=\"mx-auto mx-w-screen-lg\">\r\n                    <UserProfile user={user} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    ) : null;\r\n}\r\n\r\nexport default Profile\r\n"],"sourceRoot":""}